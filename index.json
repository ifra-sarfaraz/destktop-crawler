{"docs": [{"path": "D:\\University Data\\1ST Smester\\Itroduction To Computer Technology\\ATM C++ code.docx", "content": "    Name:   Ahmad Zafar                                                Section: W4 ICT\n         ID       : F2021065343\n ATM Withdraw C++ Code\n\n            #include <iostream>\n            using namespace std;\n            int code=1234;\n            int main()\n            {\n                int card1,pincode,amount;\n                string language,account_type,withdraw,raseed,again_transaction;\n                cout<<\"Enter The Card =\";\n                cin>>card1;\n                cout<<\"Enter The Pin code = \";\n                cin>>pincode;\n                for(int attempts=0;attempts<=2;attempts++)\n                 {\n                     if(pincode==code)\n                        {\n                          break;\n                        }\n                     else\n                        {\n                            if (attempts<2)\n                               {\n                                cout<<\"Please Enter Valid Code :\"<<endl;\n                                cin>>pincode;\n                               }\n                            else\n                               {\n                                 cout<<\"Your card is Blocked, You have Entered many times Wrong Pin code\"<<endl;\n                                 return 0;\n                               }\n                         }\n                 }\n                 cout<<\"Select Language by typing 'English' , 'Urdu' etc. \"<<\"Only English Language is applicable So Please type 'English' \"<<endl;\n                 cin>>language;\n                 cout<<endl<<\"Type the Account Type Current OR Saving : \"<<endl;\n                 cin>>account_type;\n                 cout<<\"Please Select Withdraw ,as it is not machine so type Withdraw \"<<endl;\n                 cin>>withdraw;\n                 cout<<\"Enter Amount of Money \"<<endl;\n                 cin>>amount;\n                    while(true)\n                         {\n                           if(amount%500==0)\n                           {\n                               break;\n                           }\n                           else\n                           {\n                               cout<<\"Enter again amount in multiple of 500\"<<endl;\n                               cin>>amount;\n                           }\n                          }\n                  cout<<endl<<\"Type Yes if you want receipt and No for not : \";\n                  cin>>raseed;\n                  cout<<\"Collect your card  :\"<<card1<<endl<<endl;\n                  if(raseed==\"yes\" || raseed==\"Yes\" || raseed==\"YES\")\n                      {\n                        cout<<\"          Receipt        \"<<endl<<endl;\n                        cout<<\"___________________________\"<<endl;\n                        cout<<\"cash is              = \"<<amount<<endl<<endl;\n                        cout<<\"Thanks  for Using our ATM \"<<endl;\n                        cout<<\"___________________________\"<<endl<<endl;\n                      }\n                    cout<<\"Collect your cash from collector :\"<<amount<<endl<<endl;\n\n\n                return 0;\n            }"}, {"path": "D:\\University Data\\1ST Smester\\Itroduction To Computer Technology\\Chapter_4.pdf", "content": "Instructor: <enter your name>Chapter 4: Operating System Basics\nChapter 4: Operating System Basics\nLearning Objectives:\nUnderstand the types of operating systems available\nDifferentiate among the major desktop operating \nsystems\nExplain how device drivers work\nExplain computer file storage concepts\nSystem Software\nSystem BIOS\n\u25aaStored on a ROM BIOS chip on the motherboard\n\u25aa\u201cFirmware\u201d \u2013both hardware and software\n\u25aaStarts up the computer at a low level\nOperating System\nUtilities\nOperating System\n\nOperating System\nPlatform: the hardware required to run a \nparticular operating system\n\u25aaIntel platform (IBM -compatible)\n\u2022Windows\n\u2022DOS\n\u2022UNIX\n\u2022Linux\n\u25aaMacintosh platform\n\u2022Mac OS X\n\u25aaiPad and iPhone platform\n\u2022iOS\nInterface Types\nGraphical User Interface (GUI)\nCommand -line interface\n\nUtility Software\nProtection from malware\nDisk error correction\nDisk optimization\nFile cleanup\nUninstallers\nRegistry cleanup\nDesktop and Notebook Operating \nSystems\nWindows: Best known, greatest selection of \napplications available\nMac OS: User -friendly, runs on Mac hardware. \nMany applications available\nLinux: Free, but can be more challenging to \nconfigure; few applications available\nMac OS X Mavericks\n\nMicrosoft Windows 7\n\nUbuntu Linux\n\nGoogle Chrome OS\n\nServer Operating Systems\nWindows Server\n\u25aaFamiliar GUI interface for those experienced with \nWindows\nUNIX\n\u25aaVery mature server capabilities, time -tested, large \nuser community, stable\nLinux\n\u25aaFree, customizable, many free services and utilities \navailable\nWindows Server\n\nUNIX\n\nTablet and Phone Operating Systems\nSystem -on-chip ( SoC) \nDownloadable applications (apps) from a Store \napp\nPopular SoC operating systems:\n\u25aaiOS: for iPad, iPhone\n\u25aaWindows Phone: for Windows phones\n\u25aaAndroid: for a variety of tablets and phones\niOS on the iPad\n\nWindows Phone OS\n\nDevice Drivers\nTranslate the OS requests into the language of \nthe device\nTranslates messages from the device back to the \nOS\nPublished by the device manufacturer for a \nspecific operating system and device model\nUpdates are periodically released that fix bugs \nand improve performance\nDevice Manager\nAccess from the \nControl Panel \n(System section)\nShows the \ninstalled devices\nShows driver \ndetails and \nversions\n\nDigital Storage Vocabulary\nDrive: Physical storage device\nVolume: A lettered section of a storage device (a \nlogical drive)\nPartition: To create logical volumes out of a single \nphysical drive\nFormat: To create the file system on a volume\nFile Systems\nFile system: The storage system used to store and \norganize the files on a particular volume\nCommon file systems:\n\u25aaNTFS: Most Windows hard drives (Windows 2000 \nand higher)\n\u25aaHFS+: Hard drives for Mac OS X\n\u25aaISO 9660 or UDF: CDs and DVDs\n\u25aaFAT32: Hard drives for Windows 95/98/Millennium \nEdition \nDisk Management\nAccess from Administrative Tools in Control Panel\n\nFile Paths\nRoot directory = top -level folder\nPath: the complete descriptor of a file\u2019s location, \nincluding the volume and folders\nPath is written like this:\nE:\\Budget \\January.txt\nFile Paths\nFolder tree in navigation pane in Windows \nExplorer shows graphical representation of folder \nsystem\n\nFile Extensions and Types\nExtension: characters after the period in a file \nname that indicate the file\u2019s type\nExtensions tell the OS which application to use to \nopen a data file\nExtensions tell the OS which files are executable \n(.exe or .com)\nFile Extensions and Types\n\nFile Compression\nZIP files\n\u25aaIndividual files or groups of files\n\u25aaIndividual folders or groups of folders\n\u25aaCreates a single compressed archive file\n\u25aaRight -click a group of selected files, point to Send To, \nand choose Compressed (zipped) folder\nNTFS compression\n\u25aaCan be applied to individual files or folders\n\u25aaInvisible to the user\n\u25aaIn the Properties box for the folder, click Advanced \nand mark the Compress Contents to Save Disk Space \ncheck box\nFile Encryption\nProtects files from being accessed by \nunauthorized users\nNTFS encryption\n\u25aaOnly the user who encrypted the files can view them \non the local volume\nBitLocker encryption\n\u25aaEncrypts the entire drive so that it can\u2019t be read if it \nis removed from the current computer\nBackup Vocabulary\nArchive attribute: File attribute that indicates \nwhether or not a file has changed since its last \nbackup\nFull backup: Backs up all files and sets their \narchive attribute to Off\nDifferential backup: Backs up all files that have \nthe archive attribute On but does not change that \nattribute\nIncremental backup: Backs up all files that have \nthe archive attribute On and then sets it to Off\nKey Terms\nadware\nalgorithm\nAndroid\nanti-spam software\napp\narchive attribute\nbackup set\nbackup software\nBitLocker\nChrome OS\ncommand -line interface\ncompressed archive\nDevice Manager\ndevice driver\ndifferential backup\ndisk checking program\ndistribution ( distro )\nencrypt\nFAT32\nfile extension\nfile system\nfirewall software\nfolder tree\nformat\nfull backupgraphical user interface \nHierarchical File System \nPlus (HFS+)\nincremental backup\nIntel platform\niOS\nISO 9660\nLinux\nMac OS X\nmalware\nMavericks\nMicrosoft Windows\nNew Technology File \nSystem (NTFS)\npartition\npath\nplatform\nPlug and Play\nregistry\nregistry cleanup program\nroll back\nroot directory\nserver\nshell\nspywaresystem -on-chip ( SoC)\nsystem software\nsystem volume\nthin client\nuninstaller utility\nUniversal Disc Format \n(UDF)\nUNIX\nutility software\nvirus\nWindows Phone\nWindows RT\nWindows Server\nx64\nx86\nSummary\n1 . List three types of system software.\n2 . What is the difference between an OS and a \nplatform?\n3 . List five types of utility programs.\n4 . List three operating systems that would run on \nan IBM -compatible desktop PC.\n5 . Name three operating systems used on \nsmartphones.\n6 . Explain the purpose of Plug and Play technology.\n7 . Explain the purpose of partitioning a drive.\n8 . Give an example of a complete path to a file, and \nexplain the parts of the path."}, {"path": "D:\\University Data\\1ST Smester\\Itroduction To Computer Technology\\Flow chart.docx", "content": "Flow chart to withdraw cash from ATM machine\n\n\n\n\n\n\n\n\n\n\n\n\tNo\n                                                                                                                \n                                       Yes\n\n\t\n\n\n\n\n                                                               No\n\n\t\n\t   Yes\n\n\n\n                                                       Yes\n\n\n\n\n\n\n\n\t\n\n\n\n\n\tNo\n\n\n                                                     Yes\n\n\n\n\n\n\n\n\n\t\n\n\t   "}, {"path": "D:\\University Data\\1ST Smester\\Itroduction To Computer Technology\\ICT activity.docx", "content": "Name: Ahmad Zafar\nID#F2021065343\nSection: W4\n 1.online\nThe state when computer connected to a network\n2. Video message \nShort video clip usually a 30 second video sent to a smart phone to another mobile device\n3. Telemedicine\n  Form of a long distance health care where health care professional in separate location conduct live conferences\n4. picture message\nPhoto or other image along with sound sent from a smart phone to another mobile device \n5. Resources \nHardware software data and information shared using a network\n6. Camera phone\n Phone that can send picture message \n7. Web application \nWebsite that allow users to access and interact software through web browser on any computer or any device\n8. Information \nProcessed data that conveys meaning and it useful to people\n9. Enterprise user\nComputer user that working for a business that has hundreds and thousands employees or customers that works or do business with offices across the reign the country or a world \n10. Storage device\nHardware that used to record items to and storage form\n11. Video phone\nPhone that can send video message\n12. Blog\nInformal website consisting of time stamped articles in a diary or a journal format\n13. microblog\nBlog that allow users to publish articles usually 1 and 200 charactgers\n14. Run\nProcess of using software\n15. Digital literacy\nHaving a current knowledge and understanding of computers and their uses see also computer litracy\n16. Web \nWorldwide collection of electronic documents called web pages web is the one of the most popular service\n17. Computer- aided manufacturing (CAM)\nUse of a computer to assist with a manufacturing process such a fabrication and assembly \n18. Convergence\nTerm used to refer to the manufacturers offering computers and devices with technologies that overlap\n19. Graphical user interface (GUI)\nType of a user interface that allow user to interact software using text graphics and visual images\n20. online social network\nOnline community that encourages its member to share their interests story ideas music picture \n21. Programmer\nPerson who writes and modifies computer program\n22. PDA\nLight weight mobile device that provides personal information management function such as calendar appointment book address book\n23. Super computer\nFastest most powerful and most expensive computer capable of processing more than one quadrillion instructions in a single second\n24. Execute\nProcess of computer carrying instruction in a program\n25. Embedded computer\nSpecial purpose computer that function as the component in a larger product\n26. Utility program\nType of a system software that allows a user to perform maintenance type task usually related to managing a computer its devices or program\n27. User\nAnyone who communicates with computer or utilizes the information it generates  \n28. Information processing cycle\n   Series of input output and storage activities performed by a computer\n29. Power user\nUser who requires the capabilities of a workstation or other powerful computer typically working with multimedia applications and using industry specific software\n30. Communication device\nHardware component that enables computer to send and receive data information and instruction \n31. Social networking website\nOnline community that encourages members to share their interest\u2019s data ideas story and pictures\n32. Web 2.0\nTerm refers to websites that provide users to share their personals information allow user to modify web site content\n33. Online investing\nUse of computer to buy and sell bonds online without using broker\n34. Green computing\nPractices that involves reducing electricity consumed and environmental waste generated when using a computer\n35. Server\nComputer that control access to the software hardware and other resources on a network and provides a centralized storage area for program\n36. Podcast\nRecorded audio stored on a website that can be downloaded by the computer or a portable media player\n37. Tablet PC\nSpecial type of a notebook computer that resembles a letter sized slate which allow user to write on screen\n38. System software\nPrograms that control or maintain the operation of a computer \n39. Personal computer\nComputer that can perform all its input output and other storage activities by itself\n40. Tele surgery \nSurgery in which surgeon perform operation which is not located in a physical in the room"}, {"path": "D:\\University Data\\1ST Smester\\Programming Fundamentals\\Project\\Project PF.pdf", "content": "Contents  \nDescription  ................................ ................................ ................................ ................................ ..............  1 \nThe functionalities of SEMS  ................................ ................................ ................................ ................  1 \nAdding Members  ................................ ................................ ................................ .............................  1 \nAdding Expenses  ................................ ................................ ................................ .............................  1 \nCalculate Net Balance  ................................ ................................ ................................ .....................  1 \nExpense History  ................................ ................................ ................................ ...............................  2 \nExample in  table  ................................ ................................ ................................ ..............................  2 \nSubmission  ................................ ................................ ................................ ................................ ..............  3 \nMarking Criteria  ................................ ................................ ................................ ................................ .. 3 \nSubmission Requirements  ................................ ................................ ................................ ..................  3 \nImportant Note:  ................................ ................................ ................................ ..............................  3 \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n1 \n Programming Funda mentals   \n(CC1021 ) \nGroup Project  \nImplementation of Shared Expenses  Management \nSystem  (SEMS ) \n[15 Marks]  \nGroup Project  Submission Requirements  \nDescription  \nThe task consists of programming a C++ implementation of an applicatio n that split the expenses of \nmultiple users . \nThe functionalities of SEMS  \nAdding Members  \nThe initial task is to add a number of members with th eir names  and show all members  when \nrequested.  \nExample : There are 4 members  with the name M ember  1, Member  2, Member  3, and Member  4 you \nneed to add them to your member s\u2019 array . \nAdding Expenses  \nYou need to i mplement a functionality that takes the inp ut from the user in the form of float  \n(expense amount ) and string  (Payer Name ), divides it equally between each member,  and adds  the \namount to each member\u2019s balance  to pay the payer except  the payer  itself . You can  add expenses  as \nmuch as you like . \nExample:  if Member 1 pay s 200 Rs it will be divided by the total number of members  so in above  \ndiscussed scenario it will be divide d by 4  and each member will have to pay 50 Rs to Member 1 ; \ntherefore, 50 Rs will be added into the balance sheet of each member against Member 1  \nCalculate Net Balance  \nYou need to adjust the payable amount of each member against every  other member.  If there is a \nliability  on any member it \u2019ll be adjusted .  \nExample : if Member 2 pays 80 Rs it\u2019ll add 20 to each other member except Member 1 as Membe r 2 \nis already resp onsible to pay 50 Rs to Member 1 ; hence Member 2 will h ave to pay 30 (50 \u2013 20) to \nMember 1  but Member 3 and 4 need to pay 70 overs 50 to Member 1 and 20 to Member 2 \nrespectively . Whereas  Member 1 needs  to collect 50 from Member 3 and Member 4 and 30 from \nMember 2 , likewis e Member 2 needs  to collect 20 from Member 3 and M ember 4 while he has to \npay 30 to Member 1.  Members  3 and Member 4  have to  pay 20 and 50 to Member 1 and Member 2 \nRespectively.  \n2 \n Expense History  \nAt the end of each month , the application will show the overall expenses  of each member  and store \nthe history in a file. You need  to retrieve  the file to show expenses.   \nExample : This will show the total payable expenses o r you  can say the balance of each person \nagainst  all other member s separately .  \n \n \nExample in table  \nExpenses  Payer  Member 1  Member 2  Member 3 Member 4  \n  M 2 M 3 M 4 M 1 M 3 M 4 M 1 M 2 M 4 M 1 M 2 M 3 \n200 M 1 -50 -50 -50 50 0 0 50 0 0 50 0 0 \n80 M 2 -30 -50 -50 30 -20 -20 50 20 0 50 20 0 \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n3 \n Submission  \nMarking Criteria  \nThe following marking scheme can only  serve as a guideline  and will be ada pted correspondingly.  \nAdding Members : 2 marks  \nAdding Expenses : 4 marks  \nCalculate Net Balance : 6 marks  \nExpense History : 3 marks  \nSubmission Requirements  \nSubmit a zipped file with your Group Numbe r and group leader name (e.g. 3 Leader _Name .zip) . The \nproject  is to be submitted on Moodle by the leader  only which contains  your code as single or \nmultiple C++ files. \nImportant Note:  Do not submit your C++ script code as a .doc file. C++ code in .doc format will  \nnot be marked . "}]}